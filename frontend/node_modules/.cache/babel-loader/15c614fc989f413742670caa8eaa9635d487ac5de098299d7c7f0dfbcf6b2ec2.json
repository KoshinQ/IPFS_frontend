{"ast":null,"code":"var _jsxFileName = \"/home/koshin/front_react_back_node/frontend/src/components/IoT.js\";\nimport React, { Component } from 'react';\nimport abi from '../Contracts/IoTSC_ABI';\nimport web3 from '../Contracts/web3';\n// IoTコンポーネントを定義する\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass IoT extends Component {\n  //コンポーネントの状態を初期化する\n  constructor(props) {\n    super(props);\n    this.addPatientHistry = this.addPatientHistry.bind(this);\n    this.input = /*#__PURE__*/React.createRef();\n  }\n  async addPatientHistry(event) {\n    event.preventDefault();\n    const accounts = await web3.eth.getAccounts();\n    const contract = new web3.eth.Contract(abi, this.props.takedEID);\n    let hexMessage = web3.utils.utf8ToHex(this.input.current.value);\n    let hasheddMessage = web3.utils.soliditySha3(hexMessage);\n    await contract.methods.addPatientHistry(hasheddMessage).send({\n      from: accounts[0]\n    });\n    // POST送信\n    fetch('http://localhost:3001/insert', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        sn: this.props.takedSn,\n        info: this.input.current.value\n      })\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      } else {\n        console.warn('Something went wrong on api server!');\n      }\n    }).then(json => {\n      return this.callback(json);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.addPatientHistry,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u8FFD\\u52A0\\u3059\\u308B\\u6240\\u6709\\u8005\\u60C5\\u5831\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\uFF1A\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: this.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"\\u767B\\u9332\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default IoT;","map":{"version":3,"names":["React","Component","abi","web3","IoT","constructor","props","addPatientHistry","bind","input","createRef","event","preventDefault","accounts","eth","getAccounts","contract","Contract","takedEID","hexMessage","utils","utf8ToHex","current","value","hasheddMessage","soliditySha3","methods","send","from","fetch","method","headers","Accept","body","JSON","stringify","sn","takedSn","info","then","response","status","json","console","warn","callback","catch","error","render"],"sources":["/home/koshin/front_react_back_node/frontend/src/components/IoT.js"],"sourcesContent":["import React, { Component } from 'react';\nimport abi from '../Contracts/IoTSC_ABI';\nimport web3 from '../Contracts/web3';\n// IoTコンポーネントを定義する\nclass IoT extends Component {\n\n  //コンポーネントの状態を初期化する\n  constructor(props) {\n    super(props);\n    this.addPatientHistry = this.addPatientHistry.bind(this);\n    this.input = React.createRef();\n  }\n\n  async addPatientHistry(event) {\n  event.preventDefault();\n  const accounts = await web3.eth.getAccounts();\n  const contract = new web3.eth.Contract(abi, this.props.takedEID)\n  let hexMessage = web3.utils.utf8ToHex(this.input.current.value);\n  let hasheddMessage = web3.utils.soliditySha3(hexMessage);\n  await contract.methods.addPatientHistry(hasheddMessage).send({from:accounts[0]});\n  // POST送信\n  fetch('http://localhost:3001/insert', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      sn: this.props.takedSn,\n      info: this.input.current.value\n    })\n  })\n  .then(response => {\n    if (response.status === 200) {\n      return response.json()\n    } else {\n      console.warn('Something went wrong on api server!');\n    }\n  })\n  .then(json => {\n    return this.callback(json)\n  })\n  .catch(error => {\n    console.error(error);\n  })\n\n  }\n\n  render() {\n      return (\n        <div>\n          <form onSubmit={this.addPatientHistry}>\n            <label>\n              追加する所有者情報を入力してください：\n              <input type=\"text\" ref={this.input}/>\n            </label>\n            <input type=\"submit\" value=\"登録\" />\n          </form>\n        </div>\n      );\n  }\n}\n\nexport default IoT;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,GAAG,MAAM,wBAAwB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC;AAAA;AACA,MAAMC,GAAG,SAASH,SAAS,CAAC;EAE1B;EACAI,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC;IACxD,IAAI,CAACC,KAAK,gBAAGT,KAAK,CAACU,SAAS,EAAE;EAChC;EAEA,MAAMH,gBAAgB,CAACI,KAAK,EAAE;IAC9BA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACW,GAAG,CAACC,WAAW,EAAE;IAC7C,MAAMC,QAAQ,GAAG,IAAIb,IAAI,CAACW,GAAG,CAACG,QAAQ,CAACf,GAAG,EAAE,IAAI,CAACI,KAAK,CAACY,QAAQ,CAAC;IAChE,IAAIC,UAAU,GAAGhB,IAAI,CAACiB,KAAK,CAACC,SAAS,CAAC,IAAI,CAACZ,KAAK,CAACa,OAAO,CAACC,KAAK,CAAC;IAC/D,IAAIC,cAAc,GAAGrB,IAAI,CAACiB,KAAK,CAACK,YAAY,CAACN,UAAU,CAAC;IACxD,MAAMH,QAAQ,CAACU,OAAO,CAACnB,gBAAgB,CAACiB,cAAc,CAAC,CAACG,IAAI,CAAC;MAACC,IAAI,EAACf,QAAQ,CAAC,CAAC;IAAC,CAAC,CAAC;IAChF;IACAgB,KAAK,CAAC,8BAA8B,EAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,EAAE,EAAE,IAAI,CAAC9B,KAAK,CAAC+B,OAAO;QACtBC,IAAI,EAAE,IAAI,CAAC7B,KAAK,CAACa,OAAO,CAACC;MAC3B,CAAC;IACH,CAAC,CAAC,CACDgB,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3B,OAAOD,QAAQ,CAACE,IAAI,EAAE;MACxB,CAAC,MAAM;QACLC,OAAO,CAACC,IAAI,CAAC,qCAAqC,CAAC;MACrD;IACF,CAAC,CAAC,CACDL,IAAI,CAACG,IAAI,IAAI;MACZ,OAAO,IAAI,CAACG,QAAQ,CAACH,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAI;MACdJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EAEF;EAEAC,MAAM,GAAG;IACL,oBACE;MAAA,uBACE;QAAM,QAAQ,EAAE,IAAI,CAACzC,gBAAiB;QAAA,wBACpC;UAAA,8IAEE;YAAO,IAAI,EAAC,MAAM;YAAC,GAAG,EAAE,IAAI,CAACE;UAAM;YAAA;YAAA;YAAA;UAAA,QAAE;QAAA;UAAA;UAAA;UAAA;QAAA,QAC/B,eACR;UAAO,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IAC7B;MAAA;MAAA;MAAA;IAAA,QACH;EAEZ;AACF;AAEA,eAAeL,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}