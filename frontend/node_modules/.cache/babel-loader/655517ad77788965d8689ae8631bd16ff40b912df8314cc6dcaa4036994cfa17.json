{"ast":null,"code":"var _jsxFileName = \"/home/koshin/front_react_back_node_enc2/frontend/src/components/IoT.js\";\nimport React, { Component } from 'react';\nimport abi from '../Contracts/IoTSC_ABI';\nimport web3 from '../Contracts/web3';\n// IoTコンポーネントを定義する\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass IoT extends Component {\n  //コンポーネントの状態を初期化する\n  constructor(props) {\n    super(props);\n    this.addPatientHistry = this.addPatientHistry.bind(this);\n    this.input = /*#__PURE__*/React.createRef();\n  }\n  async addPatientHistry(event) {\n    event.preventDefault();\n    // POST送信\n    fetch('http://localhost:5000/enc', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        plaintxt: this.input.current.value\n      })\n    }).then(response => response.json()).then(data => console.log(data));\n\n    // const accounts = await web3.eth.getAccounts();\n    // const contract = new web3.eth.Contract(abi, this.props.takedEID)\n    // await contract.methods.addPatientHistry(this.input.current.value).send({from:accounts[0]});\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.addPatientHistry,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u8FFD\\u52A0\\u3059\\u308B\\u6240\\u6709\\u8005\\u60C5\\u5831\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\uFF1A\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: this.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"\\u767B\\u9332\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default IoT;","map":{"version":3,"names":["React","Component","abi","web3","IoT","constructor","props","addPatientHistry","bind","input","createRef","event","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","plaintxt","current","value","then","response","json","data","console","log","render"],"sources":["/home/koshin/front_react_back_node_enc2/frontend/src/components/IoT.js"],"sourcesContent":["import React, { Component } from 'react';\nimport abi from '../Contracts/IoTSC_ABI';\nimport web3 from '../Contracts/web3';\n// IoTコンポーネントを定義する\nclass IoT extends Component {\n\n  //コンポーネントの状態を初期化する\n  constructor(props) {\n    super(props);\n    this.addPatientHistry = this.addPatientHistry.bind(this);\n    this.input = React.createRef();\n  }\n\n  async addPatientHistry(event) {\n  event.preventDefault();\n  // POST送信\n  fetch('http://localhost:5000/enc', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      plaintxt: this.input.current.value\n    })\n  })\n  .then((response) => response.json())\n  .then((data) => console.log(data));\n\n  // const accounts = await web3.eth.getAccounts();\n  // const contract = new web3.eth.Contract(abi, this.props.takedEID)\n  // await contract.methods.addPatientHistry(this.input.current.value).send({from:accounts[0]});\n\n  }\n\n  render() {\n      return (\n        <div>\n          <form onSubmit={this.addPatientHistry}>\n            <label>\n              追加する所有者情報を入力してください：\n              <input type=\"text\" ref={this.input}/>\n            </label>\n            <input type=\"submit\" value=\"登録\" />\n          </form>\n        </div>\n      );\n  }\n}\n\nexport default IoT;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,GAAG,MAAM,wBAAwB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC;AAAA;AACA,MAAMC,GAAG,SAASH,SAAS,CAAC;EAE1B;EACAI,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACA,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC;IACxD,IAAI,CAACC,KAAK,gBAAGT,KAAK,CAACU,SAAS,EAAE;EAChC;EAEA,MAAMH,gBAAgB,CAACI,KAAK,EAAE;IAC9BA,KAAK,CAACC,cAAc,EAAE;IACtB;IACAC,KAAK,CAAC,2BAA2B,EAAE;MACjCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,QAAQ,EAAE,IAAI,CAACX,KAAK,CAACY,OAAO,CAACC;MAC/B,CAAC;IACH,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;;IAElC;IACA;IACA;EAEA;;EAEAG,MAAM,GAAG;IACL,oBACE;MAAA,uBACE;QAAM,QAAQ,EAAE,IAAI,CAACtB,gBAAiB;QAAA,wBACpC;UAAA,8IAEE;YAAO,IAAI,EAAC,MAAM;YAAC,GAAG,EAAE,IAAI,CAACE;UAAM;YAAA;YAAA;YAAA;UAAA,QAAE;QAAA;UAAA;UAAA;UAAA;QAAA,QAC/B,eACR;UAAO,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IAC7B;MAAA;MAAA;MAAA;IAAA,QACH;EAEZ;AACF;AAEA,eAAeL,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}